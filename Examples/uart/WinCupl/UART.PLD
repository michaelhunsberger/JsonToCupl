Name Name ;
Partno 00 ;
Date Apr 2023;
Revision 01;
Designer Engineer;
Company None;
Assembly None;
Location ;
Device f1504ispplcc44;



/* The following was auto-generated by JsonToCUPL 0.0.1.0 */


PIN    = clk;
PIN    = res_n;
PIN    = uart_clk;
PIN    = rx;
PIN    = rx_byte0;
PIN    = rx_byte1;
PIN    = rx_byte2;
PIN    = rx_byte3;
PIN    = rx_byte4;
PIN    = rx_byte5;
PIN    = rx_byte6;
PIN    = rx_byte7;
PIN    = rx_rdy;
PIN    = tx;
PIN    = tx_rdy;
PIN    = tx_byte0;
PIN    = tx_byte1;
PIN    = tx_byte2;
PIN    = tx_byte3;
PIN    = tx_byte4;
PIN    = tx_byte5;
PIN    = tx_byte6;
PIN    = tx_byte7;
PIN    = stb;



PINNODE      = JTCN98;
PINNODE      = JTCN99;
PINNODE      = JTCN100;
PINNODE      = JTCN101;
PINNODE      = JTCN102;
PINNODE      = JTCN103;
PINNODE      = JTCN104;
PINNODE      = JTCN105;
PINNODE      = JTCN106;
PINNODE      = JTCN107;
PINNODE      = JTCN108;
PINNODE      = JTCN109;
PINNODE      = JTCN110;
PINNODE      = JTCN111;
PINNODE      = JTCN112;
PINNODE      = JTCN113;
PINNODE      = JTCN114;
PINNODE      = JTCN115;
PINNODE      = JTCN116;
PINNODE      = JTCN117;
PINNODE      = JTCN118;
PINNODE      = JTCN119;
PINNODE      = JTCN120;
PINNODE      = JTCN121;
PINNODE      = JTCN122;
PINNODE      = JTCN123;
PINNODE      = JTCN124;
PINNODE      = JTCN125;
PINNODE      = uart_clock_inst_counter0;
PINNODE      = JTCN127;
PINNODE      = JTCN128;
PINNODE      = JTCN129;
PINNODE      = JTCN130;
PINNODE      = JTCN131;
PINNODE      = JTCN132;
PINNODE      = JTCN133;
PINNODE      = uart_clock_inst_counter1;
PINNODE      = uart_clock_inst_counter2;
PINNODE      = uart_clock_inst_counter3;
PINNODE      = uart_clock_inst_counter4;
PINNODE      = uart_clock_inst_counter5;
PINNODE      = uart_clock_inst_counter6;
PINNODE      = uart_clock_inst_counter7;
PINNODE      = rx_inst_rx_shifter0;
PINNODE      = rx_inst_rx_shifter1;
PINNODE      = rx_inst_rx_shifter2;
PINNODE      = rx_inst_state0;
PINNODE      = rx_inst_state1;
PINNODE      = rx_inst_state2;
PINNODE      = rx_inst_count0;
PINNODE      = rx_inst_count1;
PINNODE      = rx_inst_count2;
PINNODE      = rx_inst_count3;
PINNODE      = rx_inst_count4;
PINNODE      = tx_inst_stb_ff;
PINNODE      = tx_inst_tx_byte_ff0;
PINNODE      = tx_inst_tx_byte_ff1;
PINNODE      = tx_inst_tx_byte_ff2;
PINNODE      = tx_inst_tx_byte_ff3;
PINNODE      = tx_inst_tx_byte_ff4;
PINNODE      = tx_inst_tx_byte_ff5;
PINNODE      = tx_inst_tx_byte_ff6;
PINNODE      = tx_inst_tx_byte_ff7;
PINNODE      = tx_inst_baud_count0;
PINNODE      = tx_inst_baud_count1;
PINNODE      = tx_inst_bit_count0;
PINNODE      = tx_inst_bit_count1;
PINNODE      = tx_inst_bit_count2;
PINNODE      = tx_inst_state0;
PINNODE      = tx_inst_state1;



uart_clk.AP = 'b'0;
uart_clk.AR = JTCN98;
uart_clk.CK = clk;
uart_clk.D = ( uart_clk $ JTCN99 );
rx_byte0.AP = 'b'0;
rx_byte0.AR = JTCN98;
rx_byte0.CK = uart_clk;
rx_byte0.D = ! ( ( ! ( ( rx_byte1 & JTCN108 ) ) & ! ( ( rx_byte0 & JTCN107 ) ) )
  );
rx_byte1.AP = 'b'0;
rx_byte1.AR = JTCN98;
rx_byte1.CK = uart_clk;
rx_byte1.D = ! ( ( ! ( ( rx_byte2 & JTCN108 ) ) & ! ( ( rx_byte1 & JTCN107 ) ) )
  );
rx_byte2.AP = 'b'0;
rx_byte2.AR = JTCN98;
rx_byte2.CK = uart_clk;
rx_byte2.D = ! ( ( ! ( ( rx_byte3 & JTCN108 ) ) & ! ( ( rx_byte2 & JTCN107 ) ) )
  );
rx_byte3.AP = 'b'0;
rx_byte3.AR = JTCN98;
rx_byte3.CK = uart_clk;
rx_byte3.D = ! ( ( ! ( ( rx_byte4 & JTCN108 ) ) & ! ( ( rx_byte3 & JTCN107 ) ) )
  );
rx_byte4.AP = 'b'0;
rx_byte4.AR = JTCN98;
rx_byte4.CK = uart_clk;
rx_byte4.D = ! ( ( ! ( ( rx_byte5 & JTCN108 ) ) & ! ( ( rx_byte4 & JTCN107 ) ) )
  );
rx_byte5.AP = 'b'0;
rx_byte5.AR = JTCN98;
rx_byte5.CK = uart_clk;
rx_byte5.D = ! ( ( ! ( ( rx_byte6 & JTCN108 ) ) & ! ( ( rx_byte5 & JTCN107 ) ) )
  );
rx_byte6.AP = 'b'0;
rx_byte6.AR = JTCN98;
rx_byte6.CK = uart_clk;
rx_byte6.D = ! ( ( ! ( ( rx_byte7 & JTCN108 ) ) & ! ( ( rx_byte6 & JTCN107 ) ) )
  );
rx_byte7.AP = 'b'0;
rx_byte7.AR = JTCN98;
rx_byte7.CK = uart_clk;
rx_byte7.D = ! ( ( ! ( ( rx_byte7 & JTCN107 ) ) & ! ( ( JTCN108 & (
  rx_inst_rx_shifter1 & ! ( ( ! ( rx_inst_rx_shifter0 ) & ! ( rx_inst_rx_shifter2
  ) ) ) ) ) ) ) );
rx_rdy = ( JTCN121 & ( ! ( rx_inst_state0 ) & rx_inst_state1 ) );
tx = ! ( ( ! ( ( JTCN122 & ! ( ( ! ( ( tx_inst_bit_count0 & ! ( ( ! ( ( ! ( ( !
  ( tx_inst_tx_byte_ff3 ) & JTCN133 ) ) & ( tx_inst_bit_count1 & ! ( ( ! (
  tx_inst_tx_byte_ff7 ) & tx_inst_bit_count2 ) ) ) ) ) & ! ( ( JTCN130 & ( ! ( ( !
  ( tx_inst_tx_byte_ff1 ) & JTCN133 ) ) & ! ( ( ! ( tx_inst_tx_byte_ff5 ) &
  tx_inst_bit_count2 ) ) ) ) ) ) ) ) ) & ! ( ( JTCN129 & ! ( ( ! ( (
  tx_inst_tx_byte_ff4 & tx_inst_bit_count2 ) ) & ! ( ( tx_inst_tx_byte_ff0 &
  JTCN133 ) ) ) ) ) ) ) ) ) ) & ( JTCN123 & ! ( ( JTCN132 & ( tx_inst_bit_count1 &
  ! ( ( ! ( ( tx_inst_tx_byte_ff6 & tx_inst_bit_count2 ) ) & ! ( (
  tx_inst_tx_byte_ff2 & JTCN133 ) ) ) ) ) ) ) ) ) );
tx_rdy = ( ! ( tx_inst_state1 ) & JTCN127 );
JTCN98 = ! ( res_n );
JTCN99 = ( ( ( ! ( uart_clock_inst_counter5 ) & ! ( uart_clock_inst_counter6 ) )
  & ( uart_clock_inst_counter4 & uart_clock_inst_counter7 ) ) & ( ( JTCN105 & ! (
  uart_clock_inst_counter1 ) ) & ( ! ( uart_clock_inst_counter2 ) & ! (
  uart_clock_inst_counter3 ) ) ) );
JTCN100 = ( uart_clock_inst_counter4 & JTCN102 );
JTCN101 = ! ( JTCN99 );
JTCN102 = ( uart_clock_inst_counter3 & JTCN103 );
JTCN103 = ( uart_clock_inst_counter2 & JTCN104 );
JTCN104 = ( uart_clock_inst_counter0 & uart_clock_inst_counter1 );
JTCN105 = ! ( uart_clock_inst_counter0 );
JTCN106 = ( uart_clock_inst_counter5 & JTCN100 );
JTCN107 = ! ( JTCN108 );
JTCN108 = ( JTCN109 & JTCN117 );
JTCN109 = ( JTCN110 & JTCN120 );
JTCN110 = ! ( rx_inst_state1 );
JTCN111 = ( rx_inst_count4 & JTCN114 );
JTCN112 = ( JTCN109 & ! ( JTCN111 ) );
JTCN113 = ! ( JTCN114 );
JTCN114 = ( rx_inst_count3 & JTCN116 );
JTCN115 = ! ( JTCN116 );
JTCN116 = ( rx_inst_count2 & JTCN117 );
JTCN117 = ( rx_inst_count0 & rx_inst_count1 );
JTCN118 = ( JTCN110 & ! ( rx ) );
JTCN119 = ( rx_inst_state0 & rx_inst_state2 );
JTCN120 = ( rx_inst_state0 & JTCN121 );
JTCN121 = ! ( rx_inst_state2 );
JTCN122 = ( tx_inst_state1 & JTCN127 );
JTCN123 = ( tx_inst_state1 $ tx_inst_state0 );
JTCN124 = ! ( ( tx_inst_stb_ff & tx_rdy ) );
JTCN125 = ! ( stb );
uart_clock_inst_counter0.AP = 'b'0;
uart_clock_inst_counter0.AR = JTCN98;
uart_clock_inst_counter0.CK = clk;
uart_clock_inst_counter0.D = ( JTCN105 & JTCN101 );
JTCN127 = ! ( tx_inst_state0 );
JTCN128 = ( tx_inst_bit_count1 & tx_inst_bit_count0 );
JTCN129 = ( JTCN130 & JTCN131 );
JTCN130 = ! ( tx_inst_bit_count1 );
JTCN131 = ! ( tx_inst_bit_count0 );
JTCN132 = ( JTCN131 & JTCN122 );
JTCN133 = ! ( tx_inst_bit_count2 );
uart_clock_inst_counter1.AP = 'b'0;
uart_clock_inst_counter1.AR = JTCN98;
uart_clock_inst_counter1.CK = clk;
uart_clock_inst_counter1.D = ( uart_clock_inst_counter0 $
  uart_clock_inst_counter1 );
uart_clock_inst_counter2.AP = 'b'0;
uart_clock_inst_counter2.AR = JTCN98;
uart_clock_inst_counter2.CK = clk;
uart_clock_inst_counter2.D = ( uart_clock_inst_counter2 $ JTCN104 );
uart_clock_inst_counter3.AP = 'b'0;
uart_clock_inst_counter3.AR = JTCN98;
uart_clock_inst_counter3.CK = clk;
uart_clock_inst_counter3.D = ( uart_clock_inst_counter3 $ JTCN103 );
uart_clock_inst_counter4.AP = 'b'0;
uart_clock_inst_counter4.AR = JTCN98;
uart_clock_inst_counter4.CK = clk;
uart_clock_inst_counter4.D = ( ! ( JTCN100 ) & ( JTCN101 & ! ( ( ! (
  uart_clock_inst_counter4 ) & ! ( JTCN102 ) ) ) ) );
uart_clock_inst_counter5.AP = 'b'0;
uart_clock_inst_counter5.AR = JTCN98;
uart_clock_inst_counter5.CK = clk;
uart_clock_inst_counter5.D = ( uart_clock_inst_counter5 $ JTCN100 );
uart_clock_inst_counter6.AP = 'b'0;
uart_clock_inst_counter6.AR = JTCN98;
uart_clock_inst_counter6.CK = clk;
uart_clock_inst_counter6.D = ( uart_clock_inst_counter6 $ JTCN106 );
uart_clock_inst_counter7.AP = 'b'0;
uart_clock_inst_counter7.AR = JTCN98;
uart_clock_inst_counter7.CK = clk;
uart_clock_inst_counter7.D = ( JTCN101 & ( uart_clock_inst_counter7 $ (
  uart_clock_inst_counter6 & JTCN106 ) ) );
rx_inst_rx_shifter0.AP = 'b'0;
rx_inst_rx_shifter0.AR = JTCN98;
rx_inst_rx_shifter0.CK = uart_clk;
rx_inst_rx_shifter0.D = ( rx_inst_rx_shifter1 & JTCN109 );
rx_inst_rx_shifter1.AP = 'b'0;
rx_inst_rx_shifter1.AR = JTCN98;
rx_inst_rx_shifter1.CK = uart_clk;
rx_inst_rx_shifter1.D = ( rx_inst_rx_shifter2 & JTCN109 );
rx_inst_rx_shifter2.AP = 'b'0;
rx_inst_rx_shifter2.AR = JTCN98;
rx_inst_rx_shifter2.CK = uart_clk;
rx_inst_rx_shifter2.D = ( rx & JTCN109 );
rx_inst_state0.AP = 'b'0;
rx_inst_state0.AR = JTCN98;
rx_inst_state0.CK = uart_clk;
rx_inst_state0.D = ! ( ( ! ( ( rx_inst_state2 & JTCN118 ) ) & ( ! ( JTCN112 ) &
  ! ( ( rx_inst_state1 & JTCN119 ) ) ) ) );
rx_inst_state1.AP = 'b'0;
rx_inst_state1.AR = JTCN98;
rx_inst_state1.CK = uart_clk;
rx_inst_state1.D = ! ( ( ! ( ( JTCN109 & JTCN111 ) ) & ! ( ( JTCN118 & JTCN119 )
  ) ) );
rx_inst_state2.AP = 'b'0;
rx_inst_state2.AR = JTCN98;
rx_inst_state2.CK = uart_clk;
rx_inst_state2.D = ( ! ( JTCN120 ) & JTCN118 );
rx_inst_count0.AP = 'b'0;
rx_inst_count0.AR = JTCN98;
rx_inst_count0.CK = uart_clk;
rx_inst_count0.D = ( ! ( rx_inst_count0 ) & JTCN109 );
rx_inst_count1.AP = 'b'0;
rx_inst_count1.AR = JTCN98;
rx_inst_count1.CK = uart_clk;
rx_inst_count1.D = ( JTCN109 & ( rx_inst_count0 $ rx_inst_count1 ) );
rx_inst_count2.AP = 'b'0;
rx_inst_count2.AR = JTCN98;
rx_inst_count2.CK = uart_clk;
rx_inst_count2.D = ( JTCN115 & ( JTCN109 & ! ( ( ! ( rx_inst_count2 ) & ! (
  JTCN117 ) ) ) ) );
rx_inst_count3.AP = 'b'0;
rx_inst_count3.AR = JTCN98;
rx_inst_count3.CK = uart_clk;
rx_inst_count3.D = ( JTCN113 & ( JTCN109 & ! ( ( ! ( rx_inst_count3 ) & JTCN115
  ) ) ) );
rx_inst_count4.AP = 'b'0;
rx_inst_count4.AR = JTCN98;
rx_inst_count4.CK = uart_clk;
rx_inst_count4.D = ( JTCN112 & ! ( ( ! ( rx_inst_count4 ) & JTCN113 ) ) );
tx_inst_stb_ff.AP = 'b'0;
tx_inst_stb_ff.AR = JTCN98;
tx_inst_stb_ff.CK = uart_clk;
tx_inst_stb_ff.D = ! ( ( JTCN125 & JTCN124 ) );
tx_inst_tx_byte_ff0.AP = 'b'0;
tx_inst_tx_byte_ff0.AR = JTCN98;
tx_inst_tx_byte_ff0.CK = uart_clk;
tx_inst_tx_byte_ff0.D = ! ( ( ! ( ( tx_byte0 & stb ) ) & ! ( (
  tx_inst_tx_byte_ff0 & JTCN125 ) ) ) );
tx_inst_tx_byte_ff1.AP = 'b'0;
tx_inst_tx_byte_ff1.AR = JTCN98;
tx_inst_tx_byte_ff1.CK = uart_clk;
tx_inst_tx_byte_ff1.D = ! ( ( ! ( ( stb & tx_byte1 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff1 ) ) ) );
tx_inst_tx_byte_ff2.AP = 'b'0;
tx_inst_tx_byte_ff2.AR = JTCN98;
tx_inst_tx_byte_ff2.CK = uart_clk;
tx_inst_tx_byte_ff2.D = ! ( ( ! ( ( stb & tx_byte2 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff2 ) ) ) );
tx_inst_tx_byte_ff3.AP = 'b'0;
tx_inst_tx_byte_ff3.AR = JTCN98;
tx_inst_tx_byte_ff3.CK = uart_clk;
tx_inst_tx_byte_ff3.D = ! ( ( ! ( ( stb & tx_byte3 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff3 ) ) ) );
tx_inst_tx_byte_ff4.AP = 'b'0;
tx_inst_tx_byte_ff4.AR = JTCN98;
tx_inst_tx_byte_ff4.CK = uart_clk;
tx_inst_tx_byte_ff4.D = ! ( ( ! ( ( stb & tx_byte4 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff4 ) ) ) );
tx_inst_tx_byte_ff5.AP = 'b'0;
tx_inst_tx_byte_ff5.AR = JTCN98;
tx_inst_tx_byte_ff5.CK = uart_clk;
tx_inst_tx_byte_ff5.D = ! ( ( ! ( ( stb & tx_byte5 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff5 ) ) ) );
tx_inst_tx_byte_ff6.AP = 'b'0;
tx_inst_tx_byte_ff6.AR = JTCN98;
tx_inst_tx_byte_ff6.CK = uart_clk;
tx_inst_tx_byte_ff6.D = ! ( ( ! ( ( stb & tx_byte6 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff6 ) ) ) );
tx_inst_tx_byte_ff7.AP = 'b'0;
tx_inst_tx_byte_ff7.AR = JTCN98;
tx_inst_tx_byte_ff7.CK = uart_clk;
tx_inst_tx_byte_ff7.D = ! ( ( ! ( ( stb & tx_byte7 ) ) & ! ( ( JTCN125 &
  tx_inst_tx_byte_ff7 ) ) ) );
tx_inst_baud_count0.AP = 'b'0;
tx_inst_baud_count0.AR = JTCN98;
tx_inst_baud_count0.CK = uart_clk;
tx_inst_baud_count0.D = ! ( tx_inst_baud_count0 );
tx_inst_baud_count1.AP = 'b'0;
tx_inst_baud_count1.AR = JTCN98;
tx_inst_baud_count1.CK = uart_clk;
tx_inst_baud_count1.D = ( tx_inst_baud_count1 $ tx_inst_baud_count0 );
tx_inst_bit_count0.AP = 'b'0;
tx_inst_bit_count0.AR = JTCN98;
tx_inst_bit_count0.CK = tx_inst_baud_count1;
tx_inst_bit_count0.D = JTCN132;
tx_inst_bit_count1.AP = 'b'0;
tx_inst_bit_count1.AR = JTCN98;
tx_inst_bit_count1.CK = tx_inst_baud_count1;
tx_inst_bit_count1.D = ( ! ( JTCN128 ) & ( JTCN122 & ! ( JTCN129 ) ) );
tx_inst_bit_count2.AP = 'b'0;
tx_inst_bit_count2.AR = JTCN98;
tx_inst_bit_count2.CK = tx_inst_baud_count1;
tx_inst_bit_count2.D = ( JTCN122 & ( tx_inst_bit_count2 $ JTCN128 ) );
tx_inst_state0.AP = 'b'0;
tx_inst_state0.AR = JTCN98;
tx_inst_state0.CK = tx_inst_baud_count1;
tx_inst_state0.D = ! ( ( JTCN124 & ! ( ( JTCN122 & ( tx_inst_bit_count2 &
  JTCN128 ) ) ) ) );
tx_inst_state1.AP = 'b'0;
tx_inst_state1.AR = JTCN98;
tx_inst_state1.CK = tx_inst_baud_count1;
tx_inst_state1.D = JTCN123;
